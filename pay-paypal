<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Shop with PayPal Checkout</title>
  <style>
    body { font-family: Arial, sans-serif; padding: 20px; max-width: 600px; margin: auto; }
    h1 { text-align: center; }
    .product, .cart-item { border: 1px solid #ccc; padding: 10px; margin: 10px 0; }
    button { padding: 5px 10px; cursor: pointer; }
    #cart { border: 1px solid #000; padding: 10px; }
    nav a { margin: 0 10px; text-decoration: none; color: blue; }
    nav { margin-bottom: 20px; text-align: center; }
  </style>
</head>
<body>
  <nav>
    <a href="index.html">Home</a>
    <a href="shop-paypal.html">Shop</a>
    <a href="payment.html">Payment</a>
  </nav>

  <h1>Shop with PayPal Checkout</h1>

  <input type="text" id="search" placeholder="Search products..." oninput="renderProducts()" style="width: 100%; padding: 8px; margin-bottom: 20px;" />

  <div id="products"></div>

  <h2>Your Cart</h2>
  <div id="cart"></div>

  <form id="paypal-form" action="https://www.paypal.com/cgi-bin/webscr" method="post" target="_blank" style="margin-top: 20px;">
    <input type="hidden" name="business" value="your-paypal-email@example.com" />
    <input type="hidden" name="cmd" value="_cart" />
    <input type="hidden" name="upload" value="1" />
    <div id="paypal-items"></div>
    <input type="submit" value="Checkout with PayPal" />
  </form>

  <script>
    // Sample products
    const products = [
      { id: 1, name: "Laptop", price: 999 },
      { id: 2, name: "Headphones", price: 199 },
      { id: 3, name: "Keyboard", price: 49 },
      { id: 4, name: "Mouse", price: 29 },
      { id: 5, name: "Monitor", price: 249 }
    ];

    // Cart array
    let cart = [];

    // Load cart from localStorage if exists
    function loadCart() {
      const saved = localStorage.getItem('cart');
      if (saved) {
        cart = JSON.parse(saved);
      }
    }

    // Save cart to localStorage
    function saveCart() {
      localStorage.setItem('cart', JSON.stringify(cart));
    }

    // Render product list filtered by search
    function renderProducts() {
      const searchTerm = document.getElementById('search').value.toLowerCase();
      const container = document.getElementById('products');
      container.innerHTML = '';

      const filtered = products.filter(p => p.name.toLowerCase().includes(searchTerm));

      if (filtered.length === 0) {
        container.innerHTML = '<p>No products found.</p>';
        return;
      }

      filtered.forEach(product => {
        const div = document.createElement('div');
        div.className = 'product';
        div.innerHTML = `
          <strong>${product.name}</strong><br>
          Price: $${product.price}<br>
          <button onclick="addToCart(${product.id})">Add to Cart</button>
        `;
        container.appendChild(div);
      });
    }

    // Render cart items
    function renderCart() {
      const container = document.getElementById('cart');
      container.innerHTML = '';

      if (cart.length === 0) {
        container.innerHTML = '<p>Your cart is empty.</p>';
        return;
      }

      // Group items by product id to get quantities
      const grouped = cart.reduce((acc, item) => {
        acc[item.id] = (acc[item.id] || 0) + 1;
        return acc;
      }, {});

      // Create cart items display
      Object.entries(grouped).forEach(([id, qty]) => {
        const product = products.find(p => p.id == id);
        const div = document.createElement('div');
        div.className = 'cart-item';
        div.innerHTML = `
          ${product.name} - $${product.price} Ã— ${qty} = $${product.price * qty}
          <button onclick="removeFromCart(${id})" style="margin-left: 10px;">Remove one</button>
        `;
        container.appendChild(div);
      });

      // Total
      const total = cart.reduce((sum, item) => sum + item.price, 0);
      const totalDiv = document.createElement('div');
      totalDiv.style.marginTop = '10px';
      totalDiv.innerHTML = `<strong>Total: $${total}</strong>`;
      container.appendChild(totalDiv);

      buildPayPalForm();
    }

    // Add product to cart
    function addToCart(id) {
      const product = products.find(p => p.id === id);
      cart.push(product);
      saveCart();
      renderCart();
    }

    // Remove one item from cart
    function removeFromCart(id) {
      const index = cart.findIndex(item => item.id === id);
      if (index !== -1) {
        cart.splice(index, 1);
        saveCart();
        renderCart();
      }
    }

    // Build PayPal form inputs from cart
    function buildPayPalForm() {
      const container = document.getElementById('paypal-items');
      container.innerHTML = '';

      // Group items by product id and quantity
      const grouped = cart.reduce((acc, item) => {
        acc[item.id] = (acc[item.id] || 0) + 1;
        return acc;
      }, {});

      let itemNumber = 1;
      for (const [id, qty] of Object.entries(grouped)) {
        const product = products.find(p => p.id == id);

        container.innerHTML += `
          <input type="hidden" name="item_name_${itemNumber}" value="${product.name}" />
          <input type="hidden" name="amount_${itemNumber}" value="${product.price}" />
          <input type="hidden" name="quantity_${itemNumber}" value="${qty}" />
        `;
        itemNumber++;
      }
    }

    // Initialize
    loadCart();
    renderProducts();
    renderCart();
  </script>
</body>
</html>
