<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Payment Page</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <script src="https://www.paypal.com/sdk/js?client-id=YOUR_PAYPAL_CLIENT_ID&currency=USD"></script> <!-- Replace with your PayPal client ID -->
  <style>
    body { font-family: Arial, sans-serif; max-width: 600px; margin: 40px auto; text-align: center; }
    h2 { margin-bottom: 20px; }
    .summary { text-align: left; margin: 20px 0; padding: 10px; border: 1px solid #ccc; }
    .payment-button { padding: 15px; font-size: 16px; border: none; border-radius: 6px; color: white; cursor: pointer; text-decoration: none; margin: 10px 0; display: block; }
    .stripe-btn { background-color: #6772e5; }
    .square-btn { background-color: #3a86ff; }
    .zelle-btn { background-color: #28a745; }
  </style>
</head>
<body>

  <h2>Checkout</h2>

  <div class="summary" id="cart-summary">
    <p>Loading cart...</p>
  </div>

  <!-- PayPal Smart Button -->
  <div id="paypal-button-container" style="margin: 30px 0;"></div>

  <!-- Other payment methods -->
  <a id="stripe-link" class="payment-button stripe-btn" target="_blank">Pay with Stripe</a>
  <a id="square-link" class="payment-button square-btn" target="_blank">Pay with Square</a>
  <button class="payment-button zelle-btn" id="zelle-button">Pay with Zelle</button>

  <script>
    // Load cart from localStorage
    let cart = JSON.parse(localStorage.getItem("cart")) || [];

    const summary = document.getElementById("cart-summary");
    const stripeLink = document.getElementById("stripe-link");
    const squareLink = document.getElementById("square-link");
    const zelleBtn = document.getElementById("zelle-button");

    let total = 0;

    if (cart.length === 0) {
      summary.innerHTML = "<p>Your cart is empty.</p>";
    } else {
      summary.innerHTML = "<strong>Items:</strong><ul>" +
        cart.map(item => {
          total += item.price * (item.quantity || 1);
          return `<li>${item.name} - $${item.price} x ${item.quantity || 1}</li>`;
        }).join("") +
        `</ul><strong>Total: $${total.toFixed(2)}</strong>`;
    }

    // Initialize PayPal button
    paypal.Buttons({
      createOrder: function(data, actions) {
        return actions.order.create({
          purchase_units: [{
            description: "Your cart purchase",
            amount: { value: total.toFixed(2) }
          }]
        });
      },
      onApprove: function(data, actions) {
        return actions.order.capture().then(function(details) {
          alert("Payment successful. Thank you, " + details.payer.name.given_name + "!");
          localStorage.removeItem("cart");
        });
      }
    }).render('#paypal-button-container');

    // Set payment links (optional tracking params)
    const cartSummary = cart.map(item => `${item.name}x${item.quantity || 1}`).join(", ");
    const encodedSummary = encodeURIComponent(cartSummary);
    const encodedAmount = total.toFixed(2);

    stripeLink.href = `https://buy.stripe.com/test_YOUR_LINK?item=${encodedSummary}&amount=${encodedAmount}`;
    squareLink.href = `https://square.link/u/YOUR_SQUARE_LINK?item=${encodedSummary}&amount=${encodedAmount}`;

    zelleBtn.onclick = () => {
      alert(`Send $${encodedAmount} via Zelle to: zelle@example.com\n\nItems: ${cartSummary}`);
    };
  </script>

</body>
</html>
